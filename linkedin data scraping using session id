import undetected_chromedriver as uc
from selenium.webdriver.common.by import By
import pandas as pd
import os
import time
import random

# LinkedIn session cookie  here session ID chnages every login expired or until logout 
session_ID = 'AQEDAUdRXeMAyZ1sAAABlf9I2L0AAAGWI1VcvVYACTCfjT2TQtCOEGh9EMlF3qPywYiIHA5szgNUUV-tM-JS8CZXYNgdiVBm_QA2G29u-bsVBgaSj3K8Iv2GK16F3Lc19-Vl5pbF1dok9u2X51qe8vH1'

driver = uc.Chrome()
driver.get("https://www.linkedin.com")
time.sleep(5)

# Set session cookie
driver.add_cookie({
    "name": "li_at",
    "value": session_ID,
    "domain": ".linkedin.com",
    "path": "/",
    "httpOnly": True
})

# Load feed to apply cookie
driver.get("https://www.linkedin.com/feed/")
time.sleep(5)
print("✅ Logged in!")

# Go to Connections
driver.get("https://www.linkedin.com/mynetwork/invite-connect/connections/")
time.sleep(8)

# Scroll target
container = driver.find_element(By.XPATH, "//*[@id='root']/div[1]/div[3]/div[2]/main")

connections = set()
last_count = 0
no_change_count = 0

while True:
    # Extract all current visible connections
    profile_links = driver.find_elements(By.XPATH, "//a[contains(@href, '/in/')]")

    for link in profile_links:
        profile_url = link.get_attribute("href")
        profile_name = link.text.strip() or "Unknown"
        if profile_url and (profile_name, profile_url) not in connections:
            connections.add((profile_name, profile_url))
            print(f"✅ Collected: {profile_name} | {profile_url}")

    # Scroll the container
    driver.execute_script("arguments[0].scrollBy(0, 1000);", container)
    time.sleep(random.uniform(2.5, 4.5))  # Let new content load

    # Check if we're making progress
    if len(connections) == last_count:
        no_change_count += 1
    else:
        no_change_count = 0
        last_count = len(connections)

    # Stop after 3 scrolls with no new connections
    if no_change_count >= 3:
        print("✅ No new connections loaded after multiple scrolls. Stopping.")
        break

print(f"\n🔍 Total connections collected: {len(connections)}")

# Save results
file_path = os.path.join(os.path.expanduser("~"), "Desktop", "LinkedIn_Connections.csv")
df = pd.DataFrame(list(connections), columns=["Profile Name", "Profile Link"])
df.to_csv(file_path, index=False, encoding='utf-8')
print(f"📁 Saved to {file_path}")

driver.quit()
